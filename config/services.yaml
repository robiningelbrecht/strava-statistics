# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    env(MANIFEST_APP_URL): 'http://localhost:8080/'
    env(SPORT_TYPES_TO_IMPORT): '[]'
    env(ACTIVITY_VISIBILITIES_TO_IMPORT): '[]'
    env(ACTIVITIES_TO_SKIP_DURING_IMPORT): '[]'
    env(NUMBER_OF_NEW_ACTIVITIES_TO_PROCESS_PER_IMPORT): 250
    env(UNIT_SYSTEM): 'metric'
    env(TIME_FORMAT): 24
    env(DATE_FORMAT): 'DAY-MONTH-YEAR'
    env(LOCALE): 'en_US'
    env(PROFILE_PICTURE_URL): ''
    env(ZWIFT_LEVEL):
    env(ZWIFT_RACING_SCORE):
    env(NTFY_URL): ''
    env(OLLAMA_MODEL):
    env(OLLAMA_URL):

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    _instanceof:
        App\Infrastructure\CQRS\CommandHandler:
            tags: ['app.command_handler']

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    App\Infrastructure\Exception\ErrorResponseExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception }

    Linkin\Component\DoctrineNamingStrategy\ORM\Mapping\CamelCaseNamingStrategy:
        class: Linkin\Component\DoctrineNamingStrategy\ORM\Mapping\CamelCaseNamingStrategy

    Doctrine\Migrations\Version\DbalMigrationFactory: ~
    App\Infrastructure\Doctrine\Migrations\Factory\CommandBusAwareMigrationFactory:
        decorates: Doctrine\Migrations\Version\DbalMigrationFactory
        arguments: [ '@App\Infrastructure\Doctrine\Migrations\Factory\CommandBusAwareMigrationFactory.inner' ]

    App\Infrastructure\CQRS\Bus\CommandBus:
        class: App\Infrastructure\CQRS\Bus\InMemoryCommandBus
        arguments: [!tagged_iterator app.command_handler]

    App\Infrastructure\ValueObject\String\KernelProjectDir:
        factory: [ App\Infrastructure\ValueObject\String\KernelProjectDir, 'fromString' ]
        arguments: ['%kernel.project_dir%']

    App\Infrastructure\ValueObject\String\PlatformEnvironment:
        factory: [ App\Infrastructure\ValueObject\String\PlatformEnvironment, 'from' ]
        arguments: ['%env(string:APP_ENV)%']

    App\Infrastructure\Time\Format\DateAndTimeFormat:
        factory: [ App\Infrastructure\Time\Format\DateAndTimeFormat, 'create' ]
        arguments: [
            '%env(enum:App\Infrastructure\Time\Format\DateFormat:DATE_FORMAT)%',
            '%env(enum:App\Infrastructure\Time\Format\TimeFormat:TIME_FORMAT)%',
        ]

    App\Infrastructure\ValueObject\Measurement\UnitSystem:
        factory: [ 'App\Infrastructure\ValueObject\Measurement\UnitSystem', from ]
        arguments: [ '%env(string:UNIT_SYSTEM)%' ]

    App\Infrastructure\Localisation\Locale:
        factory: [ App\Infrastructure\Localisation\Locale, 'from' ]
        arguments: ['%env(string:LOCALE)%']

    League\Flysystem\FilesystemOperator: '@default.storage'

    GuzzleHttp\Client:
        class: GuzzleHttp\Client

    App\Domain\App\ProfilePictureUrl:
        factory: [ App\Domain\App\ProfilePictureUrl, 'fromOptionalString' ]
        arguments: ['%env(string:PROFILE_PICTURE_URL)%']

    App\Domain\Integration\Notification\Ntfy\NtfyUrl:
        factory: [ App\Domain\Integration\Notification\Ntfy\NtfyUrl, 'fromOptionalString' ]
        arguments: ['%env(string:NTFY_URL)%']

    ollamaUrl:
        class: App\Infrastructure\ValueObject\String\Url
        factory: [ App\Infrastructure\ValueObject\String\Url, 'fromOptionalString' ]
        arguments: ['%env(string:OLLAMA_URL)%']

    App\Domain\Integration\AI\Ollama\OllamaConfig:
        factory: [ App\Domain\Integration\AI\Ollama\OllamaConfig, 'create' ]
        arguments: ['%env(OLLAMA_MODEL)%', '@ollamaUrl']

    App\Domain\Manifest\ManifestAppUrl:
        factory: [ App\Domain\Manifest\ManifestAppUrl, 'fromString' ]
        arguments: ['%env(string:MANIFEST_APP_URL)%']

    App\Domain\Strava\StravaClientId:
        factory: [ App\Domain\Strava\StravaClientId, 'fromString' ]
        arguments: ['%env(string:STRAVA_CLIENT_ID)%']

    App\Domain\Strava\StravaClientSecret:
        factory: [ App\Domain\Strava\StravaClientSecret, 'fromString' ]
        arguments: ['%env(string:STRAVA_CLIENT_SECRET)%']

    App\Domain\Strava\StravaRefreshToken:
        factory: [ App\Domain\Strava\StravaRefreshToken, 'fromString' ]
        arguments: ['%env(string:STRAVA_REFRESH_TOKEN)%']

    App\Domain\Strava\Athlete\AthleteBirthDate:
        class: App\Domain\Strava\Athlete\AthleteBirthDate
        factory: [ App\Domain\Strava\Athlete\AthleteBirthDate, 'fromString' ]
        arguments: ['%env(string:ATHLETE_BIRTHDAY)%']

    App\Domain\Strava\Activity\ImportActivities\ActivityVisibilitiesToImport:
        factory: [ 'App\Domain\Strava\Activity\ImportActivities\ActivityVisibilitiesToImport', from ]
        arguments: [ '%env(json:ACTIVITY_VISIBILITIES_TO_IMPORT)%' ]

    App\Domain\Strava\Activity\SportType\SportTypesToImport:
        factory: [ 'App\Domain\Strava\Activity\SportType\SportTypesToImport', from ]
        arguments: [ '%env(json:SPORT_TYPES_TO_IMPORT)%' ]

    App\Domain\Strava\Activity\NumberOfNewActivitiesToProcessPerImport:
        factory: [ 'App\Domain\Strava\Activity\NumberOfNewActivitiesToProcessPerImport', fromInt ]
        arguments: [ '%env(int:NUMBER_OF_NEW_ACTIVITIES_TO_PROCESS_PER_IMPORT)%' ]

    App\Domain\Strava\Activity\ActivitiesToSkipDuringImport:
        factory: [ 'App\Domain\Strava\Activity\ActivitiesToSkipDuringImport', from ]
        arguments: [ '%env(json:ACTIVITIES_TO_SKIP_DURING_IMPORT)%' ]

    App\Domain\Strava\Athlete\Weight\ImportAthleteWeight\AthleteWeightsFromEnvFile:
        factory: [ 'App\Domain\Strava\Athlete\Weight\ImportAthleteWeight\AthleteWeightsFromEnvFile', fromString ]
        arguments: [ '%env(string:ATHLETE_WEIGHTS)%',  '@App\Infrastructure\ValueObject\Measurement\UnitSystem']

    App\Domain\Strava\Ftp\ImportFtp\FtpValuesFromEnvFile:
        factory: [ 'App\Domain\Strava\Ftp\ImportFtp\FtpValuesFromEnvFile', fromString ]
        arguments: [ '%env(string:FTP_VALUES)%' ]

    App\Domain\Zwift\ZwiftLevel:
        factory: [ 'App\Domain\Zwift\ZwiftLevel', fromOptionalString ]
        arguments: [ '%env(string:ZWIFT_LEVEL)%' ]

    App\Domain\Zwift\ZwiftRacingScore:
        factory: [ 'App\Domain\Zwift\ZwiftRacingScore', fromOptionalString ]
        arguments: [ '%env(string:ZWIFT_RACING_SCORE)%' ]